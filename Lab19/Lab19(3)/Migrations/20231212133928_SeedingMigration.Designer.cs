// <auto-generated />
using System;
using Lab19_3_.P03_SalesDatabase.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Lab19_3_.Migrations
{
    [DbContext(typeof(SalesContext))]
    [Migration("20231212133928_SeedingMigration")]
    partial class SeedingMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Lab19_3_.P03_SalesDatabase.Data.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CustomerId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreditCardNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(80)
                        .IsUnicode(false)
                        .HasColumnType("varchar(80)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Customets");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreditCardNumber = "3665-075320-3041",
                            Email = "Laverne70@hotmail.com",
                            Name = "Laverne Brown"
                        },
                        new
                        {
                            Id = 2,
                            CreditCardNumber = "3450-315947-76584",
                            Email = "Perry19@hotmail.com",
                            Name = "Perry Kunze"
                        },
                        new
                        {
                            Id = 3,
                            CreditCardNumber = "6759-2990-9150-0940",
                            Email = "Tracey82@gmail.com",
                            Name = "Tracey Miller"
                        },
                        new
                        {
                            Id = 4,
                            CreditCardNumber = "630434157621006921",
                            Email = "Carole.Daniel1@hotmail.com",
                            Name = "Carole Daniel"
                        },
                        new
                        {
                            Id = 5,
                            CreditCardNumber = "5893-5886-0787-2507",
                            Email = "Lionel_Ondricka50@yahoo.com",
                            Name = "Lionel Ondricka"
                        },
                        new
                        {
                            Id = 6,
                            CreditCardNumber = "3528-1076-3172-2576",
                            Email = "Lance36@gmail.com",
                            Name = "Lance Wilkinson"
                        },
                        new
                        {
                            Id = 7,
                            CreditCardNumber = "6759-2594-5719-8816-832",
                            Email = "Warren65@hotmail.com",
                            Name = "Warren Auer"
                        },
                        new
                        {
                            Id = 8,
                            CreditCardNumber = "6304578302259881516",
                            Email = "Ernesto.Jenkins87@hotmail.com",
                            Name = "Ernesto Jenkins"
                        },
                        new
                        {
                            Id = 9,
                            CreditCardNumber = "5893-5043-2454-2430",
                            Email = "Johnathan_Nienow44@hotmail.com",
                            Name = "Johnathan Nienow"
                        },
                        new
                        {
                            Id = 10,
                            CreditCardNumber = "6759-0926-9514-3124-106",
                            Email = "Iris35@gmail.com",
                            Name = "Iris Jones"
                        });
                });

            modelBuilder.Entity("Lab19_3_.P03_SalesDatabase.Data.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ProductId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Practical Concrete Ball",
                            Price = 854.9404f,
                            Quantity = 79
                        },
                        new
                        {
                            Id = 2,
                            Name = "Rustic Wooden Salad",
                            Price = 933.5612f,
                            Quantity = 95
                        },
                        new
                        {
                            Id = 3,
                            Name = "Tasty Granite Car",
                            Price = 858.21014f,
                            Quantity = 18
                        },
                        new
                        {
                            Id = 4,
                            Name = "Incredible Wooden Hat",
                            Price = 100.47606f,
                            Quantity = 63
                        },
                        new
                        {
                            Id = 5,
                            Name = "Fantastic Granite Shoes",
                            Price = 193.91866f,
                            Quantity = 17
                        },
                        new
                        {
                            Id = 6,
                            Name = "Fantastic Cotton Bacon",
                            Price = 484.18298f,
                            Quantity = 57
                        },
                        new
                        {
                            Id = 7,
                            Name = "Unbranded Fresh Shoes",
                            Price = 994.6787f,
                            Quantity = 79
                        },
                        new
                        {
                            Id = 8,
                            Name = "Sleek Frozen Bacon",
                            Price = 924.1591f,
                            Quantity = 76
                        },
                        new
                        {
                            Id = 9,
                            Name = "Sleek Fresh Pants",
                            Price = 355.43805f,
                            Quantity = 76
                        },
                        new
                        {
                            Id = 10,
                            Name = "Gorgeous Soft Keyboard",
                            Price = 197.98871f,
                            Quantity = 62
                        });
                });

            modelBuilder.Entity("Lab19_3_.P03_SalesDatabase.Data.Models.Sale", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SaleId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("StoreId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ProductId");

                    b.HasIndex("StoreId");

                    b.ToTable("Sales");

                    b.HasData(
                        new
                        {
                            Id = 6,
                            CustomerId = 8,
                            Date = new DateOnly(2023, 12, 13),
                            ProductId = 8,
                            StoreId = 4
                        },
                        new
                        {
                            Id = 7,
                            CustomerId = 5,
                            Date = new DateOnly(2023, 12, 13),
                            ProductId = 4,
                            StoreId = 4
                        },
                        new
                        {
                            Id = 8,
                            CustomerId = 3,
                            Date = new DateOnly(2023, 12, 12),
                            ProductId = 8,
                            StoreId = 3
                        },
                        new
                        {
                            Id = 9,
                            CustomerId = 7,
                            Date = new DateOnly(2023, 12, 13),
                            ProductId = 2,
                            StoreId = 2
                        },
                        new
                        {
                            Id = 10,
                            CustomerId = 2,
                            Date = new DateOnly(2023, 12, 13),
                            ProductId = 3,
                            StoreId = 2
                        },
                        new
                        {
                            Id = 11,
                            CustomerId = 4,
                            Date = new DateOnly(2023, 12, 13),
                            ProductId = 3,
                            StoreId = 3
                        },
                        new
                        {
                            Id = 12,
                            CustomerId = 8,
                            Date = new DateOnly(2023, 12, 13),
                            ProductId = 3,
                            StoreId = 5
                        },
                        new
                        {
                            Id = 13,
                            CustomerId = 4,
                            Date = new DateOnly(2023, 12, 13),
                            ProductId = 7,
                            StoreId = 2
                        },
                        new
                        {
                            Id = 14,
                            CustomerId = 8,
                            Date = new DateOnly(2023, 12, 12),
                            ProductId = 9,
                            StoreId = 4
                        },
                        new
                        {
                            Id = 15,
                            CustomerId = 5,
                            Date = new DateOnly(2023, 12, 13),
                            ProductId = 7,
                            StoreId = 1
                        },
                        new
                        {
                            Id = 16,
                            CustomerId = 10,
                            Date = new DateOnly(2023, 12, 12),
                            ProductId = 9,
                            StoreId = 3
                        },
                        new
                        {
                            Id = 17,
                            CustomerId = 6,
                            Date = new DateOnly(2023, 12, 12),
                            ProductId = 7,
                            StoreId = 5
                        },
                        new
                        {
                            Id = 18,
                            CustomerId = 1,
                            Date = new DateOnly(2023, 12, 12),
                            ProductId = 9,
                            StoreId = 2
                        },
                        new
                        {
                            Id = 19,
                            CustomerId = 8,
                            Date = new DateOnly(2023, 12, 12),
                            ProductId = 3,
                            StoreId = 4
                        },
                        new
                        {
                            Id = 20,
                            CustomerId = 6,
                            Date = new DateOnly(2023, 12, 13),
                            ProductId = 5,
                            StoreId = 1
                        },
                        new
                        {
                            Id = 21,
                            CustomerId = 2,
                            Date = new DateOnly(2023, 12, 13),
                            ProductId = 4,
                            StoreId = 4
                        },
                        new
                        {
                            Id = 22,
                            CustomerId = 10,
                            Date = new DateOnly(2023, 12, 13),
                            ProductId = 2,
                            StoreId = 5
                        },
                        new
                        {
                            Id = 23,
                            CustomerId = 10,
                            Date = new DateOnly(2023, 12, 12),
                            ProductId = 1,
                            StoreId = 4
                        },
                        new
                        {
                            Id = 24,
                            CustomerId = 4,
                            Date = new DateOnly(2023, 12, 12),
                            ProductId = 6,
                            StoreId = 4
                        },
                        new
                        {
                            Id = 25,
                            CustomerId = 1,
                            Date = new DateOnly(2023, 12, 12),
                            ProductId = 6,
                            StoreId = 3
                        });
                });

            modelBuilder.Entity("Lab19_3_.P03_SalesDatabase.Data.Models.Store", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("StoreId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("Id");

                    b.ToTable("Stores");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Klein and Sons"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Wilkinson - White"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Herman - Borer"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Rempel - Tromp"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Heaney, Leannon and Robel"
                        });
                });

            modelBuilder.Entity("Lab19_3_.P03_SalesDatabase.Data.Models.Sale", b =>
                {
                    b.HasOne("Lab19_3_.P03_SalesDatabase.Data.Models.Customer", "Customer")
                        .WithMany("Sales")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lab19_3_.P03_SalesDatabase.Data.Models.Product", "Product")
                        .WithMany("Sales")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lab19_3_.P03_SalesDatabase.Data.Models.Store", "Store")
                        .WithMany()
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Product");

                    b.Navigation("Store");
                });

            modelBuilder.Entity("Lab19_3_.P03_SalesDatabase.Data.Models.Customer", b =>
                {
                    b.Navigation("Sales");
                });

            modelBuilder.Entity("Lab19_3_.P03_SalesDatabase.Data.Models.Product", b =>
                {
                    b.Navigation("Sales");
                });
#pragma warning restore 612, 618
        }
    }
}
