// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using P01_BiilsPaymentSystems.Data;

#nullable disable

namespace P01_BiilsPaymentSystems.Migrations
{
    [DbContext(typeof(BillsPaymentSystemContext))]
    partial class BillsPaymentSystemContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("P01_BiilsPaymentSystems.Data.Model.BankAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("BankAccountId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<float>("Balance")
                        .HasColumnType("real");

                    b.Property<string>("BankName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("PaymentMethodId")
                        .HasColumnType("int");

                    b.Property<string>("SwiftCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.ToTable("BankAccounts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Balance = 15000f,
                            BankName = "Pumb",
                            PaymentMethodId = 0,
                            SwiftCode = "123141411"
                        },
                        new
                        {
                            Id = 2,
                            Balance = 10.99f,
                            BankName = "Privat",
                            PaymentMethodId = 0,
                            SwiftCode = "139048713"
                        });
                });

            modelBuilder.Entity("P01_BiilsPaymentSystems.Data.Model.CreditCard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CreditCardId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("ExpirationDate")
                        .HasColumnType("date");

                    b.Property<float>("Limit")
                        .HasColumnType("real");

                    b.Property<float>("MoneyOwed")
                        .HasColumnType("real");

                    b.Property<int>("PaymentMethodId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CreditCards");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ExpirationDate = new DateOnly(2025, 10, 3),
                            Limit = 50000f,
                            MoneyOwed = 34657.45f,
                            PaymentMethodId = 0
                        },
                        new
                        {
                            Id = 2,
                            ExpirationDate = new DateOnly(2027, 10, 3),
                            Limit = 100000f,
                            MoneyOwed = 570.45f,
                            PaymentMethodId = 0
                        });
                });

            modelBuilder.Entity("P01_BiilsPaymentSystems.Data.Model.PaymentMethod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BankAccountId")
                        .HasColumnType("int");

                    b.Property<int?>("CreditCardId")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BankAccountId")
                        .IsUnique()
                        .HasFilter("[BankAccountId] IS NOT NULL");

                    b.HasIndex("CreditCardId")
                        .IsUnique()
                        .HasFilter("[CreditCardId] IS NOT NULL");

                    b.HasIndex("UserId", "BankAccountId", "CreditCardId")
                        .IsUnique()
                        .HasFilter("[BankAccountId] IS NOT NULL AND [CreditCardId] IS NOT NULL");

                    b.ToTable("PaymentMethods", t =>
                        {
                            t.HasCheckConstraint("CK_EitherBankAccountOrCreditCard", "((BankAccountId IS NOT NULL AND CreditCardId IS NULL) OR (BankAccountId IS NULL AND CreditCardId IS NOT NULL))");
                        });

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BankAccountId = 1,
                            Type = 0,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreditCardId = 1,
                            Type = 1,
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            BankAccountId = 2,
                            Type = 0,
                            UserId = 3
                        },
                        new
                        {
                            Id = 4,
                            CreditCardId = 2,
                            Type = 1,
                            UserId = 3
                        });
                });

            modelBuilder.Entity("P01_BiilsPaymentSystems.Data.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UserId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(80)
                        .IsUnicode(false)
                        .HasColumnType("varchar(80)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "john.doe@example.com",
                            FirstName = "John",
                            LastName = "Doe",
                            Password = "password123"
                        },
                        new
                        {
                            Id = 2,
                            Email = "amf.diac@example.com",
                            FirstName = "Maksym",
                            LastName = "Diachuk",
                            Password = "password123"
                        },
                        new
                        {
                            Id = 3,
                            Email = "m.andriy@example.com",
                            FirstName = "Andriy",
                            LastName = "Malkov",
                            Password = "password123"
                        });
                });

            modelBuilder.Entity("P01_BiilsPaymentSystems.Data.Model.PaymentMethod", b =>
                {
                    b.HasOne("P01_BiilsPaymentSystems.Data.Model.BankAccount", "BankAccount")
                        .WithOne("PaymentMethod")
                        .HasForeignKey("P01_BiilsPaymentSystems.Data.Model.PaymentMethod", "BankAccountId");

                    b.HasOne("P01_BiilsPaymentSystems.Data.Model.CreditCard", "CreditCard")
                        .WithOne("PaymentMethod")
                        .HasForeignKey("P01_BiilsPaymentSystems.Data.Model.PaymentMethod", "CreditCardId");

                    b.HasOne("P01_BiilsPaymentSystems.Data.Model.User", "User")
                        .WithMany("PaymentMethods")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BankAccount");

                    b.Navigation("CreditCard");

                    b.Navigation("User");
                });

            modelBuilder.Entity("P01_BiilsPaymentSystems.Data.Model.BankAccount", b =>
                {
                    b.Navigation("PaymentMethod")
                        .IsRequired();
                });

            modelBuilder.Entity("P01_BiilsPaymentSystems.Data.Model.CreditCard", b =>
                {
                    b.Navigation("PaymentMethod")
                        .IsRequired();
                });

            modelBuilder.Entity("P01_BiilsPaymentSystems.Data.Model.User", b =>
                {
                    b.Navigation("PaymentMethods");
                });
#pragma warning restore 612, 618
        }
    }
}
